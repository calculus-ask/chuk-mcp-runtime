# =============================================================================
# ArtifactStore Configuration (.env)
# =============================================================================
# This file is automatically loaded when importing chuk_mcp_runtime.artifacts
# Copy this to .env in your project root and uncomment/modify as needed.

# =============================================================================
# STORAGE PROVIDER CONFIGURATION
# =============================================================================
# Determines where artifact data is stored
# Options: memory (default), filesystem, s3, ibm_cos, ibm_cos_iam

# Default: In-memory storage (non-persistent, great for development)
# ARTIFACT_PROVIDER=memory

# Local filesystem storage
# ARTIFACT_PROVIDER=filesystem
# ARTIFACT_FS_ROOT=./artifacts

# AWS S3 or S3-compatible storage (MinIO, DigitalOcean Spaces, etc.)
# ARTIFACT_PROVIDER=s3
# S3_ENDPOINT_URL=https://s3.amazonaws.com
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key

# IBM Cloud Object Storage (HMAC credentials)
# ARTIFACT_PROVIDER=ibm_cos
# IBM_COS_ENDPOINT=https://s3.us-south.cloud-object-storage.appdomain.cloud
# AWS_REGION=us-south
# AWS_ACCESS_KEY_ID=your-hmac-access-key
# AWS_SECRET_ACCESS_KEY=your-hmac-secret-key

# IBM Cloud Object Storage (IAM credentials)
# ARTIFACT_PROVIDER=ibm_cos_iam
# IBM_COS_ENDPOINT=https://s3.us-south.cloud-object-storage.appdomain.cloud
# IBM_COS_APIKEY=your-api-key
# IBM_COS_INSTANCE_CRN=crn:v1:bluemix:public:cloud-object-storage:global:...

# =============================================================================
# SESSION PROVIDER CONFIGURATION  
# =============================================================================
# Determines where artifact metadata is cached
# Options: memory (default), redis

# Default: In-memory session storage (non-persistent)
# SESSION_PROVIDER=memory

# Redis session storage (persistent, recommended for production)
# SESSION_PROVIDER=redis
# SESSION_REDIS_URL=redis://localhost:6379/0
# REDIS_TLS_INSECURE=0

# =============================================================================
# BUCKET/CONTAINER CONFIGURATION
# =============================================================================
# Bucket or container name for artifact storage
ARTIFACT_BUCKET=mcp-artifacts

# =============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# =============================================================================

# Development (default - no configuration needed)
# Uses memory for both storage and sessions - zero setup required!

# Testing with persistence
# ARTIFACT_PROVIDER=filesystem
# SESSION_PROVIDER=memory
# ARTIFACT_FS_ROOT=./test-artifacts

# Production with Redis and S3
# ARTIFACT_PROVIDER=s3
# SESSION_PROVIDER=redis
# S3_ENDPOINT_URL=https://s3.amazonaws.com
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=AKIA...
# AWS_SECRET_ACCESS_KEY=...
# SESSION_REDIS_URL=redis://prod-redis:6379/0
# ARTIFACT_BUCKET=prod-mcp-artifacts

# Production with Redis and IBM COS
# ARTIFACT_PROVIDER=ibm_cos
# SESSION_PROVIDER=redis
# IBM_COS_ENDPOINT=https://s3.us-south.cloud-object-storage.appdomain.cloud
# AWS_REGION=us-south
# AWS_ACCESS_KEY_ID=...
# AWS_SECRET_ACCESS_KEY=...
# SESSION_REDIS_URL=redis://prod-redis:6379/0
# ARTIFACT_BUCKET=prod-mcp-artifacts

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================
# These are rarely needed but available for fine-tuning

# Custom Redis TLS settings
# REDIS_TLS_INSECURE=1  # Set to 1 to disable SSL certificate verification

# Custom S3 endpoint for local development (MinIO, LocalStack, etc.)
# S3_ENDPOINT_URL=http://localhost:9000

# Custom filesystem root for development
# ARTIFACT_FS_ROOT=/tmp/mcp-artifacts